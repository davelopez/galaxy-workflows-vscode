{
  "name": "galaxy-workflows",
  "displayName": "Galaxy Workflows",
  "description": "Utilities to assist in the edition of Galaxy (https://galaxyproject.org/) Workflow files.",
  "version": "0.3.1",
  "preview": true,
  "license": "MIT",
  "publisher": "davelopez",
  "maintainers": [
    {
      "name": "Simon Bray",
      "url": "https://github.com/simonbray"
    },
    {
      "name": "Wolfgang Maier",
      "url": "https://github.com/wm75"
    },
    {
      "name": "David LÃ³pez",
      "url": "https://github.com/davelopez"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/davelopez/galaxy-workflows-vscode"
  },
  "bugs": {
    "url": "https://github.com/davelopez/galaxy-workflows-vscode/issues"
  },
  "icon": "assets/galaxy-logo-icon.png",
  "engines": {
    "vscode": "^1.81.0"
  },
  "categories": [
    "Linters",
    "Snippets",
    "Formatters",
    "Other"
  ],
  "main": "./client/dist/extension",
  "browser": "./client/dist/web/extension",
  "contributes": {
    "languages": [
      {
        "id": "galaxyworkflow",
        "aliases": [
          "Galaxy Workflow (JSON)"
        ],
        "extensions": [
          ".ga"
        ],
        "configuration": "./workflow-languages/configurations/json.language-configuration.json"
      },
      {
        "id": "gxformat2",
        "aliases": [
          "Galaxy Workflow (YAML)"
        ],
        "extensions": [
          ".gxwf.yml"
        ],
        "configuration": "./workflow-languages/configurations/yml.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "galaxyworkflow",
        "scopeName": "source.ga",
        "path": "./workflow-languages/syntaxes/json.tmLanguage.json"
      },
      {
        "language": "gxformat2",
        "scopeName": "source.gxformat2",
        "path": "./workflow-languages/syntaxes/yml.tmLanguage.json"
      }
    ],
    "configuration": [
      {
        "title": "Galaxy Workflows",
        "properties": {
          "galaxyWorkflows.cleaning.cleanableProperties": {
            "markdownDescription": "These properties will be removed from the workflow document when *cleaning* (or *clean comparing*) workflows.",
            "scope": "resource",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "position",
              "uuid",
              "errors",
              "version"
            ]
          },
          "galaxyWorkflows.validation.profile": {
            "markdownDescription": "The set of rules that will be used to validate workflow documents.",
            "scope": "resource",
            "type": "string",
            "enum": [
              "basic",
              "iwc"
            ],
            "markdownEnumDescriptions": [
              "Basic validation based on the Galaxy workflow schema.",
              "Stricter validation to comply with the `Intergalactic Workflow Commission` best practices."
            ],
            "default": "basic"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "galaxy-workflows.previewCleanWorkflow",
        "title": "Preview clean workflow",
        "enablement": "resourceLangId == galaxyworkflow",
        "icon": "$(eye)",
        "category": "Galaxy Workflows"
      },
      {
        "command": "galaxy-workflows.cleanWorkflow",
        "title": "Clean workflow",
        "enablement": "resourceLangId == galaxyworkflow",
        "icon": "$(edit)",
        "category": "Galaxy Workflows"
      },
      {
        "command": "galaxy-workflows.selectForCleanCompare",
        "title": "Select workflow for (clean) compare",
        "enablement": "resourceLangId == galaxyworkflow",
        "icon": "$(diff)",
        "category": "Galaxy Workflows"
      },
      {
        "command": "galaxy-workflows.compareCleanWith",
        "title": "Compare with this workflow (clean)",
        "enablement": "resourceLangId == galaxyworkflow",
        "icon": "$(diff)",
        "category": "Galaxy Workflows"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "galaxy-workflows.previewCleanWorkflow",
          "when": "activeEditor"
        },
        {
          "command": "galaxy-workflows.cleanWorkflow",
          "when": "activeEditor"
        },
        {
          "command": "galaxy-workflows.selectForCleanCompare",
          "when": "false"
        },
        {
          "command": "galaxy-workflows.compareCleanWith",
          "when": "false"
        }
      ],
      "timeline/item/context": [
        {
          "command": "galaxy-workflows.compareCleanWith",
          "group": "3_compare@1",
          "when": "false && config.git.enabled && !git.missing && galaxy-workflows.selectForCleanCompare"
        },
        {
          "command": "galaxy-workflows.selectForCleanCompare",
          "group": "3_compare@2",
          "when": "false && config.git.enabled && !git.missing && timelineItem =~ /git:file\\b/ && galaxy-workflows.gitProviderInitialized"
        }
      ],
      "explorer/context": [
        {
          "command": "galaxy-workflows.compareCleanWith",
          "group": "3_compare@1",
          "when": "config.git.enabled && !git.missing && galaxy-workflows.selectForCleanCompare"
        },
        {
          "command": "galaxy-workflows.selectForCleanCompare",
          "group": "3_compare@2",
          "when": "config.git.enabled && !git.missing && galaxy-workflows.gitProviderInitialized"
        }
      ],
      "editor/context": [
        {
          "command": "galaxy-workflows.previewCleanWorkflow",
          "group": "galaxyworkflow@1",
          "when": "resourceLangId == galaxyworkflow"
        },
        {
          "command": "galaxy-workflows.cleanWorkflow",
          "group": "galaxyworkflow@2",
          "when": "resourceLangId == galaxyworkflow"
        }
      ]
    }
  },
  "scripts": {
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "lint": "eslint ./client/src ./server --ext .ts,.tsx",
    "format": "prettier --write .",
    "clean": "rimraf client/dist && rimraf server/dist",
    "compile-servers": "cd server && npm run compile",
    "compile": "npm run clean && webpack --config ./client/webpack.config.js && npm run compile-servers",
    "vscode:prepublish": "npm run compile",
    "watch": "concurrently --kill-others \"npm run watch-server\" \"npm run watch-client\"",
    "watch-server": "cd server && npm run watch",
    "watch-client": "cd client && npm run watch",
    "test": "jest",
    "test-client": "cd client && npm test",
    "test-server": "cd server && npm test",
    "test-compile": "tsc --project ./client --outDir client/out",
    "pretest:e2e": "npm run compile && npm run test-compile",
    "test:e2e": "node ./client/out/e2e/runTests.js"
  },
  "devDependencies": {
    "@types/jest": "^29.5.4",
    "@types/mocha": "^10.0.1",
    "@types/vscode": "^1.81.0",
    "@types/webpack-env": "^1.18.1",
    "@typescript-eslint/eslint-plugin": "^6.5.0",
    "@typescript-eslint/parser": "^6.5.0",
    "@vscode/test-electron": "^2.3.10",
    "assert": "^2.0.0",
    "concurrently": "^8.2.1",
    "eslint": "^8.48.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.6.4",
    "jest-transform-yaml": "^1.1.2",
    "merge-options": "^3.0.4",
    "mocha": "^10.2.0",
    "path-browserify": "^1.0.1",
    "prettier": "3.0.3",
    "process": "^0.11.10",
    "rimraf": "^5.0.1",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.4.4",
    "typescript": "^5.2.2",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4",
    "yaml-loader": "^0.8.0"
  },
  "__metadata": {
    "id": "2306ad21-fa2c-46f9-bba8-a22e32c7cb9a",
    "publisherDisplayName": "davelopez",
    "publisherId": "b10132ef-3f96-4db4-acb0-d6a0ca1848c7",
    "isPreReleaseVersion": false
  }
}
